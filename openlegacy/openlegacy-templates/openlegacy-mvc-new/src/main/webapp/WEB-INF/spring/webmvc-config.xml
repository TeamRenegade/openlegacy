<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources -->
	<mvc:resources location="/, classpath:/META-INF/web-resources/" mapping="/resources/**"/>
	<mvc:resources location="classpath:/dj/" mapping="/dj/**"/>

	<!-- The controllers are autodetected POJOs labeled with the @Controller 
		annotation. -->
	<context:component-scan base-package="com.test"
		use-default-filters="false">
		<context:include-filter expression="org.springframework.stereotype.Controller"
			type="annotation" />
	</context:component-scan>

	<context:component-scan base-package="org.openlegacy.terminal.web.mvc"
		use-default-filters="false">
		<context:include-filter expression="org.springframework.stereotype.Controller"
			type="annotation" />
	</context:component-scan>

	<!-- Turns on support for mapping requests to Spring MVC @Controller methods 
		Also registers default Formatters and Validators for use across all @Controllers -->
	<mvc:annotation-driven conversion-service="applicationConversionService" />

	<mvc:interceptors>
		<bean class="org.openlegacy.terminal.web.mvc.InsertEntityDefinitionsInterceptor" />
 		<bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor" 
 				p:cacheSeconds="0" p:useExpiresHeader="true" p:useCacheControlHeader="true" p:useCacheControlNoStore="true" />
	</mvc:interceptors>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources -->
	<mvc:resources location="/, classpath:/META-INF/web-resources/"
		mapping="/resources/**" />

	<!-- Allows for mapping the DispatcherServlet to "/" by forwarding static 
		resource requests to the container's default Servlet -->
	<mvc:default-servlet-handler />

	<!-- selects a static view for rendering without the need for an explicit 
		controller -->
	<mvc:view-controller path="/" view-name="HtmlEmulation" />

	<!-- This bean resolves specific types of exceptions to corresponding logical 
		- view names for error views. The default behaviour of DispatcherServlet 
		- is to propagate all exceptions to the servlet container: this will happen 
		- here with all other types of exceptions. -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key=".TypeMismatchException">resourceNotFound</prop>
				<prop key=".SessionEndedException">sessionEndedException</prop>
			</props>
		</property>
	</bean>

	<!-- allows for integration of file upload functionality -->
	<bean
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		id="multipartResolver" />

	<bean
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean"
		id="applicationConversionService" />
		
	<bean class="org.springframework.web.servlet.view.tiles2.TilesViewResolver"
		id="tilesViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</bean>
	<bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer"
		id="tilesConfigurer">
		<property name="definitions">
			<list>
				<value>/template/layouts.xml</value>
				<!-- Scan views directory for Tiles configurations -->
				<value>/WEB-INF/views/**/views.xml</value>
			</list>
		</property>
	</bean>
</beans>
