<jsp:root xmlns:ol="http://www.openlegacy.org/tags" xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:fn="http://java.sun.com/jsp/jstl/functions" xmlns:spring="http://www.springframework.org/tags"
	xmlns:form="http://www.springframework.org/tags/form" xmlns:jsp="http://java.sun.com/JSP/Page" version="2.0">
	<jsp:output omit-xml-declaration="yes" />
	<jsp:directive.attribute name="name" type="java.lang.String" required="true" rtexprvalue="true" description="The entity field to bind the tag to" />
	<jsp:directive.attribute name="label" type="java.lang.String" required="false" rtexprvalue="true" description="The label for this tag. Default to field display name" />
	<jsp:directive.attribute name="maxlength" type="java.lang.Integer" required="false" rtexprvalue="true" description="The maxlength of this tag. Default to field length" />
	<jsp:directive.attribute name="rows" type="java.lang.Integer" required="false" rtexprvalue="true" description="The number of rows of this tag. If more then 1, it rendered as textarea" />
	<jsp:directive.attribute name="type" type="java.lang.String" required="false" rtexprvalue="true" description="Set field type (default 'text', or 'password')" />
	<jsp:directive.attribute name="style" type="java.lang.String" required="false" rtexprvalue="true" description="Set field style" />
	<jsp:directive.attribute name="cssClass" type="java.lang.String" required="false" rtexprvalue="true" description="Set field CSS class" />
	<jsp:directive.attribute name="top" type="java.lang.String" required="false" rtexprvalue="true" description="Set field top position" />
	<jsp:directive.attribute name="left" type="java.lang.String" required="false" rtexprvalue="true" description="Set field left position" />
	<jsp:directive.attribute name="editable" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Set if field is editable" />

	<c:choose>
		<c:when test="${fn:contains(name,'.')}">
			<c:set var="fieldNameParts" value="${fn:split(name,'.')}" />
			<c:set var="fieldPart" value="${definitions.partsDefinitions[fieldNameParts[0]]}" />
			<c:set var="fieldDefinition" value="${fieldPart.fieldsDefinitions[name]}" />
		</c:when>
		<c:otherwise>
			<c:set var="fieldDefinition" value="${definitions.fieldsDefinitions[name]}" />
		</c:otherwise>
	</c:choose>

	<c:if test="${empty label}">
		<c:set var="label" value="${fieldDefinition.displayName}" />
	</c:if>
	<c:if test="${empty type}">
		<c:set var="type" value="${fieldDefinition.fieldTypeDefinition.typeName}" />
	</c:if>
	<c:if test="${not empty top}">
		<c:set var="style" value="${style};position:absolute;top:${top};left:${left}" />
	</c:if>
	<c:if test="${empty rows}">
		<c:set var="rows" value="1" />
	</c:if>

	<div class="field-row">
		<c:if test="${not empty label}">
			<span class="label">${label}: </span>
		</c:if>
		<c:choose>
			<c:when test="${editable}">
				<c:choose>
					<c:when test="${type == 'number'}">
						<form:input type="number" id="${name}" data-dojo-type="dojox.mobile.TextBox" path="${name}" cssStyle="${style}" cssClass="${cssClass}" />
					</c:when>
					<c:when test="${type == 'boolean'}">
						<script>dojo.require("dojox.mobile.CheckBox");</script>
						<form:checkbox name="${name}" data-dojo-type="dojox.mobile.CheckBox" path="${name}" cssStyle="${style}" cssClass="checkbox ${cssClass}" />
					</c:when>
					<c:when test="${type == 'date'}">

						<form:input type="text" id="${name}" readOnly="true" path="${name}" onclick="dijit.byId('calPicker').show(this, ['above-centered','below-centered','after','before'])" />
					</c:when>
					<c:when test="${type == 'autocomplete'}">
						<input id="${fieldDefinition.name}" type="text" onclick="eval(dojo.byId('${fieldDefinition.name}Script').innerHTML);" />
						<div id="${fieldDefinition.name}Script" style="display: none">if (dijit.byId('${fieldDefinition.name}') != null) return; var xhrArgs = { handleAs : "json", url :
							"${pageContext.request.contextPath}/${definitions.entityClassName}/${fieldDefinition.name}", load : function(records) { var store = new dojo.store.Memory({ idProperty: "name", data: records});
							var combo = new dojox.mobile.ComboBox({store:store},"${fieldDefinition.name}"); }, error : function(e) {alert(e);} } var deferred = dojo.xhrGet(xhrArgs);</div>
					</c:when>
					<c:when test="${type == 'address'}">
						<form:textarea data-dojo-type="dojox.mobile.TextArea" id="${name}" path="${name}" cssStyle="${style}" cssClass="${cssClass}" rows="${rows}"/>
						<a target="_new" href="javascript:location.href= 'http://maps.google.com/maps?q=' + dojo.byId('${name}').value;"><img class="map-icon" src="${pageContext.request.contextPath}/images/map.png" /></a>
					</c:when>
					<c:when test="${type == 'password'}">
						<form:input type="password" id="${name}" maxlength="${maxlength}" path="${name}" cssStyle="${style}" cssClass="${cssClass}" />
					</c:when>
					<c:otherwise>
						<c:choose>
							<c:when test="${rows > 1}">
								<form:textarea rows="${rows}" id="${name}" maxlength="${maxlength}" path="${name}" cssStyle="${style}" cssClass="${cssClass}" />
							</c:when>
							<c:otherwise>
								<form:input type="text" id="${name}" maxlength="${maxlength}" path="${name}" cssStyle="${style}" cssClass="${cssClass}" />
							</c:otherwise>
						</c:choose>
					</c:otherwise>
				</c:choose>
			</c:when>
			<c:otherwise>
				<ol:span cssClass="readonlyField ${cssClass}" path="${name}" cssStyle="${style}" />
			</c:otherwise>
		</c:choose>
	</div>
</jsp:root>