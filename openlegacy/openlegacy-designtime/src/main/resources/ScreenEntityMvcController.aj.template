// WARNING: DO NOT EDIT THIS FILE.
// You may push code into the target .java compilation unit if you wish to edit any member(s).
package ${entityDefinition.packageName}.web;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;

import org.openlegacy.terminal.ScreenEntity;
import org.openlegacy.terminal.TerminalSession;
import org.openlegacy.terminal.actions.TerminalActions;
import org.openlegacy.terminal.spi.ScreenEntitiesRegistry;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import ${entityDefinition.packageName}.${entityDefinition.entityClassName};

privileged @SuppressWarnings("unused") aspect ${entityDefinition.entityClassName}Controller_Aspect {

	@Inject
	private TerminalSession ${entityDefinition.entityClassName}Controller.terminalSession;

	@Inject
	private ScreenEntitiesRegistry ${entityDefinition.entityClassName}Controller.screenEntitiesRegistry;

	// handle page initial display
    @RequestMapping(method = RequestMethod.GET)
    public String ${entityDefinition.entityClassName}Controller.show(Model uiModel) {
    	${entityDefinition.entityClassName} ${entityDefinition.entityName?uncap_first} = terminalSession.getEntity(${entityDefinition.entityClassName}.class);
	uiModel.addAttribute("${entityDefinition.entityName?uncap_first}", ${entityDefinition.entityName?uncap_first});
	// show the resulting page for ${entityDefinition.entityClassName}
        return "${entityDefinition.entityClassName}";
    }

	// handle submit action
    @RequestMapping(method = RequestMethod.POST)
    public String ${entityDefinition.entityClassName}Controller.submit(${entityDefinition.entityClassName} ${entityDefinition.entityName?uncap_first}, Model uiModel, HttpServletRequest httpServletRequest) {
	ScreenEntity resultScreenEntity = terminalSession.doAction(TerminalActions.ENTER(), ${entityDefinition.entityName?uncap_first});
	// go to the controller for the resulting screen name
		if (resultScreenEntity != null){
        	return "redirect:" + screenEntitiesRegistry.get(resultScreenEntity.getClass()).getEntityClassName();
		}
    	return "redirect:HtmlEmulation";
    }
    
	<#list entityDefinition.actions as action>
	// handle ${action.alias} action
    @RequestMapping(value="?action=${action.alias}", method = RequestMethod.POST)
    public String ${entityDefinition.entityClassName}Controller.${action.alias}(${entityDefinition.entityClassName} ${entityDefinition.entityName?uncap_first}, Model uiModel, HttpServletRequest httpServletRequest) {
	ScreenEntity resultScreenEntity = terminalSession.doAction(TerminalActions.${action.actionName}(), ${entityDefinition.entityName?uncap_first});
	// go to the controller for the resulting screen name
		if (resultScreenEntity != null){
        	return "redirect:" + screenEntitiesRegistry.get(resultScreenEntity.getClass()).getEntityClassName();
		}
    	return "redirect:HtmlEmulation";
		
    }
	</#list>	
	
}
