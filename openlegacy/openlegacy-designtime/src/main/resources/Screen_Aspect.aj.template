// WARNING: DO NOT EDIT THIS FILE.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ${packageName};

import java.util.List;
import org.openlegacy.terminal.ScreenEntity;
<#if supportTerminalData>
import org.openlegacy.terminal.TerminalField;
import org.openlegacy.terminal.TerminalSnapshot;
</#if>
import org.springframework.stereotype.Component;
import org.springframework.context.annotation.Scope;

privileged @SuppressWarnings("unused") aspect ${className}_Aspect {
    
    declare @type: ${className} : @Component;
	declare @type: ${className} : @Scope("prototype");
    
	<#if supportTerminalData>
    private TerminalSnapshot ${className}.terminalSnapshot;
	</#if>

    declare parents: ${className} implements ScreenEntity;
    private String ${className}.focusField;
    
	<#list fields as field>
	
	<#if supportTerminalData && !field.hasGetterField && field.primitiveType>
    private TerminalField ${className}.${field.name}Field;
	</#if>
	</#list>	
    
	<#if supportTerminalData>
    public TerminalSnapshot ${className}.getTerminalSnapshot(){
		return terminalSnapshot;
    }
	</#if>

	<#list fields as field>
		<#if !field.hasGetter>
    public ${field.type} ${className}.get${field.name?cap_first}(){
    	return this.${field.name};
    }
		</#if>
    
		<#if !field.hasSetter && field.editable>
    public void ${className}.set${field.name?cap_first}(${field.type} ${field.name}){
    	this.${field.name} = ${field.name};
    }
		</#if>

		<#if supportTerminalData && !field.hasGetterField && field.primitiveType>
    public TerminalField ${className}.get${field.name?cap_first}Field(){
    	return ${field.name}Field;
    }
		</#if>
	</#list>	

    public String ${className}.getFocusField(){
    	return focusField;
    }
    public void ${className}.setFocusField(String focusField){
    	this.focusField = focusField;
    }
    
}
