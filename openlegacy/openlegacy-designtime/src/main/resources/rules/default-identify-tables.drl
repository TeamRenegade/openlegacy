package openlegacy;

rule "find-columns"
ruleflow-group "identify-tables"
salience 100
when
	$ruleParameterSet: RuleParametersSet(ruleId == "identify-tables")
	$notAcolumnRegex  : String()  from (String)$ruleParameterSet.getRuleParameters().get("notAcolumnRegex");
	$minimumTableRows 		: Integer()  from (Integer)$ruleParameterSet.getRuleParameters().get("minimumTableRows");
	$atLeastOneFieldShouldBe : String()  from (String)$ruleParameterSet.getRuleParameters().get("atLeastOneFieldShouldBe");
		
	// there is a screen definition
	$screenEntityDefinition: ScreenEntityDesigntimeDefinition()

	// and a snapshot from the 1st screen definition
	$snapshot: TerminalSnapshot() from $screenEntityDefinition.getSnapshot()
	
	// and there is a field in a specific column (which is not a leading label) 
	$field: TerminalField(value not matches $notAcolumnRegex) from $snapshot.getFields();

	// and there is no field in this column in a higher row 
	not TerminalField(this != $field, position.column == $field.position.column, length == $field.length,position.row < $field.position.row) from $snapshot.getFields();
	
	$columnFields: List(size >= $minimumTableRows) from collect(TerminalField(position.column == $field.position.column,length == $field.length,editable == $field.editable) from $snapshot.getFields()) 

	// and at list one of the columns is not empty
	exists TerminalField(editable == true || value matches $atLeastOneFieldShouldBe) from $columnFields
then
	TableColumn tableColumn = screenEntityDefinitionsBuilder.addTableColumn($screenEntityDefinition,$columnFields);
	if (tableColumn != null){
		insert(tableColumn);
	}
end

rule "find-column-headers"
ruleflow-group "identify-tables"
salience 90
when
	// there is a screen definition
	$screenEntityDefinition: ScreenEntityDesigntimeDefinition()

	// and a snapshot from the 1st screen definition
	$snapshot: TerminalSnapshot() from $screenEntityDefinition.getSnapshot()
	
	// there is a column
	$column: TableColumn(screenEntityDefinition == $screenEntityDefinition)
	
	$headerFields: List() from collect( TerminalField( this.isEmpty() == false, position.row == $column.getStartRow() - 1,
								position.column >= $column.getStartColumn() - 2,position.column <= $column.getStartColumn() + 2) from $snapshot.getFields() )
then
	screenEntityDefinitionsBuilder.addColumnHeaders($column,$headerFields);
end


rule "find-table"
ruleflow-group "identify-tables"
salience 80
when
	// there is a column
	$firstColumn: TableColumn()

	// which belongs to a screen entity 
	$screenEntityDefinition: ScreenEntityDesigntimeDefinition() from $firstColumn.getScreenEntityDefinition()
	
	not TableColumn(startColumn < $firstColumn.startColumn, screenEntityDefinition == $screenEntityDefinition)
	  
	// and there is a list of columns which has a bigger column, start at the same row, and has the same number of fields
	$columns: List(size >= 2) from collect (TableColumn(screenEntityDefinition == $screenEntityDefinition,startColumn >= $firstColumn.startColumn ,startRow == $firstColumn.startRow,
														// in AS/400 the last field is shorter then the rest of the column. Also adding columns which there size is smaller in 1   
														eval(fields.size() +1 >= $firstColumn.getFields().size() ) ))
then
	screenEntityDefinitionsBuilder.addTableDefinition($screenEntityDefinition,$columns);
end

