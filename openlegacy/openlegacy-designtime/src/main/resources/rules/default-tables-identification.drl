package openlegacy;

rule "find-columns"
ruleflow-group "identify-tables"
salience 100
when
	$minimumTableRows : Integer() from 3
	// don't identify column which are in the format of: "Field A....:" which are typically leading labels
	$notColumnRegex	  : String() from "([\\w ]+[\\.:])+"
		
	// there is a screen definition
	$screenEntityDefinition: ScreenEntityDesigntimeDefinition()

	// and a snapshot from the 1st screen definition
	$snapshot: TerminalSnapshot() from $screenEntityDefinition.getSnapshot()
	
	// and there is a field in a specific column (which is not a leading label) 
	$field: TerminalField(value not matches $notColumnRegex) from $snapshot.getFields();

	// and there is no field in this column in a higher row 
	not TerminalField(this != $field, position.column == $field.position.column, length == $field.length,position.row < $field.position.row) from $snapshot.getFields();
	
	$columnFields: List(size >= $minimumTableRows) from collect(TerminalField(position.column == $field.position.column,length == $field.length,editable == $field.editable) from $snapshot.getFields()) 
then
	TableColumn tableColumn = screenEntityDefinitionsBuilder.addTableColumn($screenEntityDefinition,$columnFields);
	if (tableColumn != null){
		insert(tableColumn);
	}
end

rule "find-column-headers"
ruleflow-group "identify-tables"
salience 90
when
	// there is a screen definition
	$screenEntityDefinition: ScreenEntityDesigntimeDefinition()

	// and a snapshot from the 1st screen definition
	$snapshot: TerminalSnapshot() from $screenEntityDefinition.getSnapshot()
	
	// there is a column
	$column: TableColumn()
	
	$headerField: TerminalField(position.row == $column.getStartRow() - 1,position.column >= $column.getStartColumn() - 2,position.column <= $column.getStartColumn() + 2) from $snapshot.getFields()
then
	$column.getHeaderFields().add($headerField);
end


rule "find-table"
ruleflow-group "identify-tables"
salience 80
when
	// there is a column
	$firstColumn: TableColumn()

	// which belongs to a screen entity 
	$screenEntityDefinition: ScreenEntityDesigntimeDefinition() from $firstColumn.getScreenEntityDefinition()
	
	not TableColumn(startColumn < $firstColumn.startColumn, screenEntityDefinition == $screenEntityDefinition)
	  
	// and there is a list of columns which has a bigger column, start at the same row, and has the same number of fields
	$columns: List(size >= 2) from collect (TableColumn(screenEntityDefinition == $screenEntityDefinition,startColumn >= $firstColumn.startColumn ,startRow == $firstColumn.startRow, fields.size == $firstColumn.fields.size))
then
	screenEntityDefinitionsBuilder.addTableDefinition($screenEntityDefinition,$columns);
end

