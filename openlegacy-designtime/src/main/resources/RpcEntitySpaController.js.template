<#if entityName??>
	/*module name for controllers can be change by the user. Please, keep in mind to replace module name with
	the new one for designtime generation.		 
	*/
	
	angular.module('controllers').controller('${entityName}Ctrl',
	function($rootScope, $scope, $olHttp,$routeParams, flatMenu, $state) {
		$scope.noTargetScreenEntityAlert = function() {
			alert('No target entity specified for table action in table class @ScreenTableActions annotation');
		}; 
		$scope.read = function(){					
			$olHttp.get('${entityName}/' <#if keys?size &gt; 0>+ $routeParams.${keys[0].name?replace(".", "_")}</#if>,					
				function(data) {
					$rootScope.hidePreloader();
					$scope.model = data.model.entity;							
					$scope.baseUrl = olConfig.baseUrl;
					
					$scope.doActionNoTargetEntity = function(rowIndex, actionValue) {					
						$scope.model.actions=null;
						$scope.model.itemsRecords[rowIndex].action_ = actionValue;
						
						$olHttp.post('${entityName}/', $scope.model, function(data) {
							$rootScope.hidePreloader();
							$scope.model = data.model.entity;									
						});
								
					};
				}							
			);
		};	
		
		flatMenu(function(data) {					
			$scope.menuArray = data;
		});
		
		$scope.doAction = function(entityName, actionAlias) {
			
			delete $scope.model.actions;					
			$olHttp.post(entityName + "?action=" + actionAlias,$scope.model, 
				function(data) {						
					if (data.model.entityName == '${entityName}'){
						$rootScope.hidePreloader();								
						$scope.model = data.model.entity;								
					}
					else{
						$rootScope.allowHidePreloader = false;					
						$state.go(data.model.entityName);
					}
				}
			);
		};
				
		$scope.read();

	});

</#if>