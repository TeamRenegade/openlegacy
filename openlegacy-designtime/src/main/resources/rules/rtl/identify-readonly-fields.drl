package openlegacy;

rule "identify-readonly-fields"
ruleflow-group "identify-readonly-fields"
no-loop
salience 100
when
	$ruleParameterSet: RuleParametersSet(ruleId == "identify-readonly-fields")
	$fieldRegex      	: String()  from (String)$ruleParameterSet.getRuleParameters().get("fieldRegex");
	$labelRegex      	: String()  from (String)$ruleParameterSet.getRuleParameters().get("labelRegex");
	$maxDistance     	: Integer() from (Integer)$ruleParameterSet.getRuleParameters().get("maxDistance");
	$minimumFieldLength : Integer() from (Integer)$ruleParameterSet.getRuleParameters().get("minimumFieldLength");
	$maximumFieldLength : Integer() from (Integer)$ruleParameterSet.getRuleParameters().get("maximumFieldLength");
	$maximumLabelLength : Integer() from (Integer)$ruleParameterSet.getRuleParameters().get("maximumLabelLength");
	
	// there is a screen definition
	$screenEntityDefinition: ScreenEntityDesigntimeDefinition()

	// and a snapshot
	$snapshot: TerminalSnapshot() from $screenEntityDefinition.getSnapshot()
	
	// and a readonly field within the snapshot which matches a field regex
	$field: TerminalField(editable == false, value matches $fieldRegex,
						length >= $minimumFieldLength, length <= $maximumFieldLength) from $snapshot.getFields()
	
	// with a leading label before the field which is in the format of a label regex and not far then $maxDistance 
	$labelField: TerminalField(position.row == $field.position.row, position.column > $field.position.column, 
								//position.column - $maxDistance < $field.endPosition.column,  
								editable == false,length <= $maximumLabelLength, value matches $labelRegex) from $snapshot.getFields()
then
	screenEntityDefinitionsBuilder.addField($screenEntityDefinition,$field,$labelField);
	update($screenEntityDefinition);
end