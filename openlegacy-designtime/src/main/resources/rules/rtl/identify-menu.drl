package openlegacy;

import org.openlegacy.modules.menu.MenuItem;
import org.openlegacy.modules.support.menu.SimpleMenuItem;
import org.openlegacy.designtime.terminal.analyzer.modules.menu.*;

rule "identify-dobule-field-menu"
ruleflow-group "identify-screen-types"
no-loop
salience 100 
when
	$ruleParameterSet: RuleParametersSet(ruleId == "identify-menu")
	$codeMenuOptionRegex  		: String()  from (String)$ruleParameterSet.getRuleParameters().get("codeMenuOptionRegex");
	$captionMenuOptionRegex  	: String()  from (String)$ruleParameterSet.getRuleParameters().get("captionMenuOptionRegex");
	$maxDistance				: Integer() from (Integer)$ruleParameterSet.getRuleParameters().get("maxDistance");
	
	// there is a screen definition
	$screenEntityDefinition: ScreenEntityDesigntimeDefinition()

	// and a snapshot from the 1st screen definition
	$snapshot: TerminalSnapshot() from $screenEntityDefinition.getSnapshot()
	
	// and there is a field in a specific column (which is not a leading label) 
	$codeField: TerminalField(editable == false,value matches $codeMenuOptionRegex) from $snapshot.getFields();

	// optional
	$captionField: TerminalField(editable == false, this != $codeField, value matches $captionMenuOptionRegex,
								position.column < $codeField.position.column, 
								endPosition.column >= $codeField.position.column - $maxDistance,  
								position.row == $codeField.position.row) from $snapshot.getFields();
	
then
	MenuItemFact menuItemFact = new MenuItemFact($codeField,$captionField,$screenEntityDefinition);
	insert(menuItemFact);
end

rule "identify-single-field-menu"
ruleflow-group "identify-screen-types"
no-loop
salience 100 
when
	$ruleParameterSet: RuleParametersSet(ruleId == "identify-menu")
	$singleMenuOptionRegex  : String()  from (String)$ruleParameterSet.getRuleParameters().get("singleMenuOptionRegex");
	
	// there is a screen definition
	$screenEntityDefinition: ScreenEntityDesigntimeDefinition()

	// and a snapshot from the 1st screen definition
	$snapshot: TerminalSnapshot() from $screenEntityDefinition.getSnapshot()
	
	// and there is a field in a specific column (which is not a leading label) 
	$codeField: TerminalField(editable == false,value matches $singleMenuOptionRegex) from $snapshot.getFields();

then
	MenuItemFact menuItemFact = new MenuItemFact($codeField,null,$screenEntityDefinition);
	insert(menuItemFact);
end


rule "analyze-menu-items"
ruleflow-group "identify-screen-types"
no-loop 
salience 90 
when
	$ruleParameterSet: RuleParametersSet(ruleId == "identify-menu")
	$minimumMenuItems : Integer()  from (Integer)$ruleParameterSet.getRuleParameters().get("minimumMenuItems");
	$maxSelectionFieldLength : Integer()  from (Integer)$ruleParameterSet.getRuleParameters().get("maxSelectionFieldLength");
	
	// there is a screen definition
	$screenEntityDefinition: ScreenEntityDesigntimeDefinition()

	// and a snapshot from the 1st screen definition
	$snapshot: TerminalSnapshot() from $screenEntityDefinition.getSnapshot()
	
	$menuItems: List(size >= $minimumMenuItems) from collect ( MenuItemFact(screenEntityDefinition == $screenEntityDefinition) )
	
	$menuSelectionFields: List(size >= 1) from collect ( TerminalField(editable == true, $maxSelectionFieldLength == 0 || length <= $maxSelectionFieldLength) from $snapshot.getFields() )
	// pick the 1st matching field for menu selection
	//$menuSelectionField : TerminalField(this != null) from $menuSelectionFields.get(0)
then
	screenEntityDefinitionsBuilder.processFact($screenEntityDefinition, new MenuScreenFact($menuSelectionFields,$menuItems));
	update($screenEntityDefinition);
end

